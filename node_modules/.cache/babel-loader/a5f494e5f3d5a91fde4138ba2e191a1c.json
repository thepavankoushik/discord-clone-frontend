{"ast":null,"code":"import _regeneratorRuntime from\"/Users/pavankoushik/Downloads/mern-discord-clone/frontend/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/pavankoushik/Downloads/mern-discord-clone/frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import React from\"react\";import IconButton from\"@mui/material/IconButton\";import ScreenShareIcon from\"@mui/icons-material/ScreenShare\";import StopScreenShareIcon from\"@mui/icons-material/StopScreenShare\";import*as webRTCHandler from\"../../../realtimeCommunication/webRTCHandler\";import{jsx as _jsx}from\"react/jsx-runtime\";var constraints={audio:false,video:true};var ScreenShareButton=function ScreenShareButton(_ref){var localStream=_ref.localStream,screenSharingStream=_ref.screenSharingStream,setScreenSharingStream=_ref.setScreenSharingStream,isScreenSharingActive=_ref.isScreenSharingActive;var handleScreenShareToggle=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var stream;return _regeneratorRuntime().wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:if(isScreenSharingActive){_context.next=14;break;}stream=null;_context.prev=2;_context.next=5;return navigator.mediaDevices.getDisplayMedia(constraints);case 5:stream=_context.sent;_context.next=11;break;case 8:_context.prev=8;_context.t0=_context[\"catch\"](2);console.log(\"error occured when trying to get an access to screen share stream\");case 11:if(stream){setScreenSharingStream(stream);webRTCHandler.switchOutgoingTracks(stream);}_context.next=17;break;case 14:// here the logic is for stopping screen sharing\nwebRTCHandler.switchOutgoingTracks(localStream);screenSharingStream.getTracks().forEach(function(t){return t.stop();});setScreenSharingStream(null);case 17:case\"end\":return _context.stop();}}},_callee,null,[[2,8]]);}));return function handleScreenShareToggle(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsx(IconButton,{onClick:handleScreenShareToggle,style:{color:\"white\"},children:isScreenSharingActive?/*#__PURE__*/_jsx(StopScreenShareIcon,{}):/*#__PURE__*/_jsx(ScreenShareIcon,{})});};export default ScreenShareButton;","map":{"version":3,"names":["React","IconButton","ScreenShareIcon","StopScreenShareIcon","webRTCHandler","constraints","audio","video","ScreenShareButton","localStream","screenSharingStream","setScreenSharingStream","isScreenSharingActive","handleScreenShareToggle","stream","navigator","mediaDevices","getDisplayMedia","console","log","switchOutgoingTracks","getTracks","forEach","t","stop","color"],"sources":["/Users/pavankoushik/Downloads/mern-discord-clone/frontend/src/Dashboard/Room/RoomButtons/ScreenShareButton.js"],"sourcesContent":["import React from \"react\";\nimport IconButton from \"@mui/material/IconButton\";\nimport ScreenShareIcon from \"@mui/icons-material/ScreenShare\";\nimport StopScreenShareIcon from \"@mui/icons-material/StopScreenShare\";\nimport * as webRTCHandler from \"../../../realtimeCommunication/webRTCHandler\";\n\nconst constraints = {\n  audio: false,\n  video: true,\n};\n\nconst ScreenShareButton = ({\n  localStream,\n  screenSharingStream,\n  setScreenSharingStream,\n  isScreenSharingActive,\n}) => {\n  const handleScreenShareToggle = async () => {\n    if (!isScreenSharingActive) {\n      let stream = null;\n      try {\n        stream = await navigator.mediaDevices.getDisplayMedia(constraints);\n      } catch (err) {\n        console.log(\n          \"error occured when trying to get an access to screen share stream\"\n        );\n      }\n\n      if (stream) {\n        setScreenSharingStream(stream);\n        webRTCHandler.switchOutgoingTracks(stream);\n      }\n    } else {\n      // here the logic is for stopping screen sharing\n      webRTCHandler.switchOutgoingTracks(localStream);\n      screenSharingStream.getTracks().forEach((t) => t.stop());\n      setScreenSharingStream(null);\n    }\n  };\n\n  return (\n    <IconButton onClick={handleScreenShareToggle} style={{ color: \"white\" }}>\n      {isScreenSharingActive ? <StopScreenShareIcon /> : <ScreenShareIcon />}\n    </IconButton>\n  );\n};\n\nexport default ScreenShareButton;\n"],"mappings":"8SAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,MAAOC,WAAU,KAAM,0BAA0B,CACjD,MAAOC,gBAAe,KAAM,iCAAiC,CAC7D,MAAOC,oBAAmB,KAAM,qCAAqC,CACrE,MAAO,GAAKC,cAAa,KAAM,8CAA8C,CAAC,2CAE9E,GAAMC,YAAW,CAAG,CAClBC,KAAK,CAAE,KAAK,CACZC,KAAK,CAAE,IACT,CAAC,CAED,GAAMC,kBAAiB,CAAG,QAApBA,kBAAiB,MAKjB,IAJJC,YAAW,MAAXA,WAAW,CACXC,mBAAmB,MAAnBA,mBAAmB,CACnBC,sBAAsB,MAAtBA,sBAAsB,CACtBC,qBAAqB,MAArBA,qBAAqB,CAErB,GAAMC,wBAAuB,6FAAG,mJACzBD,qBAAqB,0BACpBE,MAAM,CAAG,IAAI,uCAEAC,UAAS,CAACC,YAAY,CAACC,eAAe,CAACZ,WAAW,CAAC,QAAlES,MAAM,8FAENI,OAAO,CAACC,GAAG,CACT,mEAAmE,CACpE,CAAC,QAGJ,GAAIL,MAAM,CAAE,CACVH,sBAAsB,CAACG,MAAM,CAAC,CAC9BV,aAAa,CAACgB,oBAAoB,CAACN,MAAM,CAAC,CAC5C,CAAC,+BAED;AACAV,aAAa,CAACgB,oBAAoB,CAACX,WAAW,CAAC,CAC/CC,mBAAmB,CAACW,SAAS,EAAE,CAACC,OAAO,CAAC,SAACC,CAAC,QAAKA,EAAC,CAACC,IAAI,EAAE,GAAC,CACxDb,sBAAsB,CAAC,IAAI,CAAC,CAAC,oEAEhC,kBArBKE,wBAAuB,2CAqB5B,CAED,mBACE,KAAC,UAAU,EAAC,OAAO,CAAEA,uBAAwB,CAAC,KAAK,CAAE,CAAEY,KAAK,CAAE,OAAQ,CAAE,UACrEb,qBAAqB,cAAG,KAAC,mBAAmB,IAAG,cAAG,KAAC,eAAe,IAAG,EAC3D,CAEjB,CAAC,CAED,cAAeJ,kBAAiB"},"metadata":{},"sourceType":"module"}