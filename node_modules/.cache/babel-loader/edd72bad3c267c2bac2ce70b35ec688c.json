{"ast":null,"code":"import _objectSpread from\"/Users/pavankoushik/Downloads/mern-discord-clone/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from\"react\";import{styled}from\"@mui/system\";import FriendsListItem from\"./FriendsListItem\";import{connect}from\"react-redux\";import{jsx as _jsx}from\"react/jsx-runtime\";var MainContainer=styled(\"div\")({flexGrow:1,width:\"100%\"});var checkOnlineUsers=function checkOnlineUsers(){var friends=arguments.length>0&&arguments[0]!==undefined?arguments[0]:[];var onlineUsers=arguments.length>1&&arguments[1]!==undefined?arguments[1]:[];friends.forEach(function(f){// for every online user we are considering only those who are our friends. And if our friends is among the online user then we show online status for that friend\nvar isUserOnline=onlineUsers.find(function(user){return user.userId===f.id;});f.isOnline=isUserOnline?true:false;});return friends;};// we do not call an api to fetch the friends but rather listen to socket event to get the data as it will give the relative friends according to the online user from their userId\nvar FriendsList=function FriendsList(_ref){var friends=_ref.friends,onlineUsers=_ref.onlineUsers;return/*#__PURE__*/_jsx(MainContainer,{children:checkOnlineUsers(friends,onlineUsers).map(function(f){return/*#__PURE__*/_jsx(FriendsListItem,{username:f.username,id:f.id,isOnline:f.isOnline},f.id);})});};var mapStoreStateToProps=function mapStoreStateToProps(_ref2){var friends=_ref2.friends;return _objectSpread({},friends);};export default connect(mapStoreStateToProps)(FriendsList);","map":{"version":3,"names":["React","styled","FriendsListItem","connect","MainContainer","flexGrow","width","checkOnlineUsers","friends","onlineUsers","forEach","f","isUserOnline","find","user","userId","id","isOnline","FriendsList","map","username","mapStoreStateToProps"],"sources":["/Users/pavankoushik/Downloads/mern-discord-clone/frontend/src/Dashboard/FriendsSideBar/FriendsList/FriendsList.js"],"sourcesContent":["import React from \"react\";\nimport { styled } from \"@mui/system\";\nimport FriendsListItem from \"./FriendsListItem\";\nimport { connect } from \"react-redux\";\n\nconst MainContainer = styled(\"div\")({\n  flexGrow: 1,\n  width: \"100%\",\n});\n\nconst checkOnlineUsers = (friends = [], onlineUsers = []) => {\n  friends.forEach((f) => {\n    // for every online user we are considering only those who are our friends. And if our friends is among the online user then we show online status for that friend\n    const isUserOnline = onlineUsers.find((user) => user.userId === f.id);\n    f.isOnline = isUserOnline ? true : false;\n  });\n\n  return friends;\n};\n\n// we do not call an api to fetch the friends but rather listen to socket event to get the data as it will give the relative friends according to the online user from their userId\nconst FriendsList = ({ friends, onlineUsers }) => {\n  return (\n    <MainContainer>\n      {checkOnlineUsers(friends, onlineUsers).map((f) => (\n        <FriendsListItem\n          username={f.username}\n          id={f.id}\n          key={f.id}\n          isOnline={f.isOnline}\n        />\n      ))}\n    </MainContainer>\n  );\n};\n\nconst mapStoreStateToProps = ({ friends }) => {\n  return {\n    ...friends,\n  };\n};\n\nexport default connect(mapStoreStateToProps)(FriendsList);\n"],"mappings":"8IAAA,MAAOA,MAAK,KAAM,OAAO,CACzB,OAASC,MAAM,KAAQ,aAAa,CACpC,MAAOC,gBAAe,KAAM,mBAAmB,CAC/C,OAASC,OAAO,KAAQ,aAAa,CAAC,2CAEtC,GAAMC,cAAa,CAAGH,MAAM,CAAC,KAAK,CAAC,CAAC,CAClCI,QAAQ,CAAE,CAAC,CACXC,KAAK,CAAE,MACT,CAAC,CAAC,CAEF,GAAMC,iBAAgB,CAAG,QAAnBA,iBAAgB,EAAuC,IAAnCC,QAAO,2DAAG,EAAE,IAAEC,YAAW,2DAAG,EAAE,CACtDD,OAAO,CAACE,OAAO,CAAC,SAACC,CAAC,CAAK,CACrB;AACA,GAAMC,aAAY,CAAGH,WAAW,CAACI,IAAI,CAAC,SAACC,IAAI,QAAKA,KAAI,CAACC,MAAM,GAAKJ,CAAC,CAACK,EAAE,GAAC,CACrEL,CAAC,CAACM,QAAQ,CAAGL,YAAY,CAAG,IAAI,CAAG,KAAK,CAC1C,CAAC,CAAC,CAEF,MAAOJ,QAAO,CAChB,CAAC,CAED;AACA,GAAMU,YAAW,CAAG,QAAdA,YAAW,MAAiC,IAA3BV,QAAO,MAAPA,OAAO,CAAEC,WAAW,MAAXA,WAAW,CACzC,mBACE,KAAC,aAAa,WACXF,gBAAgB,CAACC,OAAO,CAAEC,WAAW,CAAC,CAACU,GAAG,CAAC,SAACR,CAAC,qBAC5C,KAAC,eAAe,EACd,QAAQ,CAAEA,CAAC,CAACS,QAAS,CACrB,EAAE,CAAET,CAAC,CAACK,EAAG,CAET,QAAQ,CAAEL,CAAC,CAACM,QAAS,EADhBN,CAAC,CAACK,EAAE,CAET,EACH,CAAC,EACY,CAEpB,CAAC,CAED,GAAMK,qBAAoB,CAAG,QAAvBA,qBAAoB,OAAoB,IAAdb,QAAO,OAAPA,OAAO,CACrC,wBACKA,OAAO,EAEd,CAAC,CAED,cAAeL,QAAO,CAACkB,oBAAoB,CAAC,CAACH,WAAW,CAAC"},"metadata":{},"sourceType":"module"}